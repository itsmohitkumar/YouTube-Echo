name: CI/CD for Dockerized Flask App

on:
  push:
    branches: [ main ]  # Trigger workflow on push to main branch
  pull_request:
    branches: [ main ]  # Trigger workflow on pull request to main branch

jobs:
  # Job 1: Build Docker Image (for testing Docker build)
  dockerbuild:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4
      
      # Step 2: Build the Docker image (using .dockerignore)
      - name: Build The Docker Image
        run: |
          echo "üî® Building Docker image..."
          docker build . --file DockerFile --tag workflow-test:$(date +%s)
          echo "‚úîÔ∏è Docker image built successfully, .dockerignore applied"

  # Job 2: Build and Test the Flask Application
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.9 environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install Python dependencies (Flask and pytest)
      - name: Install dependencies
        run: |
          echo "üì¶ Installing dependencies..."
          python -m pip install --upgrade pip
          echo "‚úîÔ∏è Dependencies installed"

      # Step 4: Run unit tests using pytest
      - name: Run tests
        run: |
          echo "üöÄ Running tests..."
          pytest
          echo "‚úîÔ∏è Tests completed"

  # Job 3: Build and Publish Docker Image to Docker Hub
  build-and-publish:
    needs: build-and-test  # Run only after the 'build-and-test' job completes successfully
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub using secrets
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # DockerHub username from GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # DockerHub password from GitHub Secrets

      # Step 4: Build and push Docker image to Docker Hub (using .dockerignore)
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .  # The root directory containing the Dockerfile
          file: ./DockerFile  # Path to the Dockerfile
          push: true  # Push the image to Docker Hub
          tags: ${{ secrets.DOCKER_USERNAME }}/flasktest-app:latest  # Tag for the Docker image

      # Step 5: Output Docker image digest (for tracking the built image)
      - name: Image digest
        run: echo "Image digest: ${{ steps.build-and-publish.outputs.digest }}"
